# Укажите слово для поиска в поле Description
$searchWord = "Вадим"

# Импортируем модуль для работы с Active Directory (потребуется RSAT)
Import-Module ActiveDirectory

# Получаем все компьютеры из AD и отбираем только те, у которых в Description содержится искомое слово
$results = Get-ADComputer -Filter * -Properties Description, Name | Where-Object {
    $_.Description -and $_.Description -match $searchWord
} | Select-Object Name, Description

# Выводим результаты в Out-GridView
$results | Out-GridView -Title "Результаты поиска по слову '$searchWord' в поле Description"





#Показывает все компы, которые небыли в сети больше $numberOfDays дней.

$OutputEncoding = [System.Text.Encoding]::UTF8
$numberOfDays = 30

$currentDate = Get-Date
$inactiveComputers = @()
$cutOffDate = $currentDate.AddDays(-$numberOfDays)
$folders = @(
    "OU=01-AUP,DC=UHT,DC=TN,DC=CORP"
    "OU=02-USA,DC=UHT,DC=TN,DC=CORP",
    "OU=03-UHT,DC=UHT,DC=TN,DC=CORP",
    "OU=04-VLG,DC=UHT,DC=TN,DC=CORP",
    "OU=09-PRIV,DC=UHT,DC=TN,DC=CORP"
)

foreach ($folder in $folders){
    $computersInFolder = Get-ADComputer -Filter * -Properties lastLogon, lastLogonTimestamp -SearchBase $folder
        foreach ($computer in $computersInFolder){
            $lastLogonDate = [DateTime]::FromFileTime($computer.lastLogon)
            $lastLogonTimestampDate = [DateTime]::FromFileTime($computer.lastLogonTimestamp)
            if ( $lastLogonTimestampDate -lt $cutOffDate){
                $inactiveComputers += [PSCustomObject]@{
                    Name = $computer.Name
                    LastLogonTimestamp = $lastLogonTimestampDate
                    LastLogon = $lastLogonDate                    
                }
            }
        }
}

$inactiveComputers | Sort-Object LastLogonTimestamp -Descending | Out-GridView




# Устанавливаем кодировку для вывода
$OutputEncoding = [System.Text.Encoding]::UTF8

# Укажите слово для поиска в поле Description
$searchWord = "Вадим"

# OU для поиска компьютеров
$folders = @(
    "OU=01-AUP,DC=UHT,DC=TN,DC=CORP",
    "OU=02-USA,DC=UHT,DC=TN,DC=CORP",
    "OU=03-UHT,DC=UHT,DC=TN,DC=CORP",
    "OU=04-VLG,DC=UHT,DC=TN,DC=CORP",
    "OU=09-PRIV,DC=UHT,DC=TN,DC=CORP"
)

# Массив для хранения результатов
$computersWithDescriptionMatch = @()

foreach ($folder in $folders) {
    # Получаем все компьютеры в каждом OU с полем Description
    $computersInFolder = Get-ADComputer -Filter * -Properties Description, Name -SearchBase $folder

    foreach ($computer in $computersInFolder) {
        # Проверяем наличие слова в поле Description
        if ($computer.Description -and $computer.Description -match $searchWord) {
            # Если найдено совпадение, добавляем результат в массив
            $computersWithDescriptionMatch += [PSCustomObject]@{
                Name        = $computer.Name
                Description = $computer.Description
            }
        }
    }
}

# Выводим результаты в Out-GridView
$computersWithDescriptionMatch | Out-GridView -Title "Компьютеры с '$searchWord' в поле Description"
